/*
 * Generated by tools/gen_protocol_pb
 */

package pbapi

import (
	"gen/api/pt"
	"github.com/golang/protobuf/proto"
	"goslib/packet"
)

func decodeSessionAuthParams(buffer *packet.Packet) (interface{}, error) {
	data := &pt.SessionAuthParams{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeSessionAuthResponse(buffer *packet.Packet) (interface{}, error) {
	data := &pt.SessionAuthResponse{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeOk(buffer *packet.Packet) (interface{}, error) {
	data := &pt.Ok{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeFail(buffer *packet.Packet) (interface{}, error) {
	data := &pt.Fail{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeEquipLoadParams(buffer *packet.Packet) (interface{}, error) {
	data := &pt.EquipLoadParams{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeEquipLoadResponse(buffer *packet.Packet) (interface{}, error) {
	data := &pt.EquipLoadResponse{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeEquipUnLoadParams(buffer *packet.Packet) (interface{}, error) {
	data := &pt.EquipUnLoadParams{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeEquipUnLoadResponse(buffer *packet.Packet) (interface{}, error) {
	data := &pt.EquipUnLoadResponse{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeLoginResponse(buffer *packet.Packet) (interface{}, error) {
	data := &pt.LoginResponse{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeRoomJoinParams(buffer *packet.Packet) (interface{}, error) {
	data := &pt.RoomJoinParams{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeRoomJoinResponse(buffer *packet.Packet) (interface{}, error) {
	data := &pt.RoomJoinResponse{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

func decodeRoomJoinNotice(buffer *packet.Packet) (interface{}, error) {
	data := &pt.RoomJoinNotice{}
	err := proto.Unmarshal(buffer.RemainData(), data)
	return data, err
}

type DecodeHandler func(buffer *packet.Packet) (interface{}, error)

var decode_handlers = map[string]DecodeHandler{
	"SessionAuthParams":   decodeSessionAuthParams,
	"SessionAuthResponse": decodeSessionAuthResponse,
	"Ok":                  decodeOk,
	"Fail":                decodeFail,
	"EquipLoadParams":     decodeEquipLoadParams,
	"EquipLoadResponse":   decodeEquipLoadResponse,
	"EquipUnLoadParams":   decodeEquipUnLoadParams,
	"EquipUnLoadResponse": decodeEquipUnLoadResponse,
	"LoginResponse":       decodeLoginResponse,
	"RoomJoinParams":      decodeRoomJoinParams,
	"RoomJoinResponse":    decodeRoomJoinResponse,
	"RoomJoinNotice":      decodeRoomJoinNotice}

func Decode(decode_method string, buffer *packet.Packet) (interface{}, error) {
	if handler, ok := decode_handlers[decode_method]; ok {
		return handler(buffer)
	} else {
		return nil, nil
	}
}

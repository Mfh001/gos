#!/usr/bin/env ruby

require "yaml"

source = "./config/routes.yml"
`mkdir -p ../src/goslib/src/gen/register`
target = "../src/goslib/src/gen/register/register_routes.go"

defines = YAML.load_file(source)

contents = ""

instance_map = {}
defines.each do |key, value|
  chunks = key.split("#")
  controller = chunks[0]
  handler = chunks[1]
  instance = controller.downcase
  if !instance_map[instance]
    contents << "    #{instance} := &controllers.#{controller}{}"
    instance_map[instance] = true
  end
  contents << %Q{\ 
        routes.Add("#{value}", func(ctx interface{}, params interface{}) (string, interface{}) {
            return #{instance}.#{handler}(ctx.(*player.Player), params.(*pt.#{value}))
        })
  }
end

File.open(target, "w") do |io|
  io.write %Q{\
// Generated by tools/gen_routes

package register

import (
	"gen/api/pt"
	"app/controllers"
	"goslib/player"
	"goslib/routes"
)

func Load() {
#{contents}
}
}
end
`gofmt -w #{target}`

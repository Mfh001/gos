#!/usr/bin/env ruby

require "yaml"

source = "./config/routes.yml"
`mkdir -p ../src/game/src/app/gen_register`

target = "../src/game/src/app/gen_register/register_routes.go"

defines = YAML.load_file(source)

contents = ""

instance_map = {}
defines.each do |key, value|
  chunks = key.split("#")
  controller = chunks[0]
  handler = chunks[1]
  instance = controller.downcase

  if !instance_map[instance]
    contents << "    #{instance} := &controllers.#{controller}{}"
    instance_map[instance] = true
  end

  contents << %Q{\ 
    routes.Add("#{value}", func(ctx interface{}, params interface{}) (string, interface{}) {
        return #{instance}.#{handler}(ctx.(*player.Player), params.(*pt.#{value}))
    })
  }
end

File.open(target, "w") do |io|
  io.write %Q{\
    // Generated by tools/gen_routes

    package gen_register

    import (
            "gen/api/pt"
            "app/controllers"
            "goslib/player"
            "goslib/routes"
    )

    func RegisterRoutes() {
    #{contents}
    }
  }
end
`gofmt -w #{target}`
